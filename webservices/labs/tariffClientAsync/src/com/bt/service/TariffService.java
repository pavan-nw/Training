
package com.bt.service;

import java.util.concurrent.Future;
import javax.jws.HandlerChain;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TariffService", targetNamespace = "http://service.bt.com/")
@HandlerChain(file = "TariffService_handler.xml")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TariffService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.bt.service.GetTariffPlanLikeResponse>
     */
    @WebMethod(operationName = "getTariffPlanLike")
    @RequestWrapper(localName = "getTariffPlanLike", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanLike")
    @ResponseWrapper(localName = "getTariffPlanLikeResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanLikeResponse")
    public Response<GetTariffPlanLikeResponse> getTariffPlanLikeAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        TariffPlan arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getTariffPlanLike")
    @RequestWrapper(localName = "getTariffPlanLike", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanLike")
    @ResponseWrapper(localName = "getTariffPlanLikeResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanLikeResponse")
    public Future<?> getTariffPlanLikeAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        TariffPlan arg1,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetTariffPlanLikeResponse> asyncHandler);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.bt.service.TariffPlan
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTariffPlanLike", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanLike")
    @ResponseWrapper(localName = "getTariffPlanLikeResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanLikeResponse")
    @Action(input = "http://service.bt.com/TariffService/getTariffPlanLikeRequest", output = "http://service.bt.com/TariffService/getTariffPlanLikeResponse")
    public TariffPlan getTariffPlanLike(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        TariffPlan arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.bt.service.GetTariffPlanResponse>
     */
    @WebMethod(operationName = "getTariffPlan")
    @RequestWrapper(localName = "getTariffPlan", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlan")
    @ResponseWrapper(localName = "getTariffPlanResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanResponse")
    public Response<GetTariffPlanResponse> getTariffPlanAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getTariffPlan")
    @RequestWrapper(localName = "getTariffPlan", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlan")
    @ResponseWrapper(localName = "getTariffPlanResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanResponse")
    public Future<?> getTariffPlanAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetTariffPlanResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.bt.service.TariffPlan
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTariffPlan", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlan")
    @ResponseWrapper(localName = "getTariffPlanResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanResponse")
    @Action(input = "http://service.bt.com/TariffService/getTariffPlanRequest", output = "http://service.bt.com/TariffService/getTariffPlanResponse")
    public TariffPlan getTariffPlan(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.bt.service.GetTariffPlanEconomyResponse>
     */
    @WebMethod(operationName = "getTariffPlanEconomy")
    @RequestWrapper(localName = "getTariffPlanEconomy", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanEconomy")
    @ResponseWrapper(localName = "getTariffPlanEconomyResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanEconomyResponse")
    public Response<GetTariffPlanEconomyResponse> getTariffPlanEconomyAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Float arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getTariffPlanEconomy")
    @RequestWrapper(localName = "getTariffPlanEconomy", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanEconomy")
    @ResponseWrapper(localName = "getTariffPlanEconomyResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanEconomyResponse")
    public Future<?> getTariffPlanEconomyAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Float arg1,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetTariffPlanEconomyResponse> asyncHandler);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns com.bt.service.TariffPlan
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTariffPlanEconomy", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanEconomy")
    @ResponseWrapper(localName = "getTariffPlanEconomyResponse", targetNamespace = "http://service.bt.com/", className = "com.bt.service.GetTariffPlanEconomyResponse")
    @Action(input = "http://service.bt.com/TariffService/getTariffPlanEconomyRequest", output = "http://service.bt.com/TariffService/getTariffPlanEconomyResponse")
    public TariffPlan getTariffPlanEconomy(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Float arg1);

}
