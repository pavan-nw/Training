
package com.bt.jaxws.billing;

import java.net.MalformedURLException;
import java.net.URL;
import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "BillingServiceService", targetNamespace = "http://billing.jaxws.bt.com/", wsdlLocation = "http://localhost:8080/jaxws-web/api/billing?wsdl")
@HandlerChain(file = "BillingServiceService_handler.xml")
public class BillingServiceService
    extends Service
{

    private final static URL BILLINGSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException BILLINGSERVICESERVICE_EXCEPTION;
    private final static QName BILLINGSERVICESERVICE_QNAME = new QName("http://billing.jaxws.bt.com/", "BillingServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/jaxws-web/api/billing?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BILLINGSERVICESERVICE_WSDL_LOCATION = url;
        BILLINGSERVICESERVICE_EXCEPTION = e;
    }

    public BillingServiceService() {
        super(__getWsdlLocation(), BILLINGSERVICESERVICE_QNAME);
    }

    public BillingServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), BILLINGSERVICESERVICE_QNAME, features);
    }

    public BillingServiceService(URL wsdlLocation) {
        super(wsdlLocation, BILLINGSERVICESERVICE_QNAME);
    }

    public BillingServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BILLINGSERVICESERVICE_QNAME, features);
    }

    public BillingServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BillingServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns BillingService
     */
    @WebEndpoint(name = "BillingServicePort")
    public BillingService getBillingServicePort() {
        return super.getPort(new QName("http://billing.jaxws.bt.com/", "BillingServicePort"), BillingService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BillingService
     */
    @WebEndpoint(name = "BillingServicePort")
    public BillingService getBillingServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://billing.jaxws.bt.com/", "BillingServicePort"), BillingService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BILLINGSERVICESERVICE_EXCEPTION!= null) {
            throw BILLINGSERVICESERVICE_EXCEPTION;
        }
        return BILLINGSERVICESERVICE_WSDL_LOCATION;
    }

}
